package variable

import (
	"bytes"
	"fmt"
	"strings"
)


func ByteAndRune() {
	var text byte = 'a'
	fmt.Printf("%d %T\n", text, text)

	var text2 rune = '蒋'
	fmt.Printf("%d %T\n", text2, text2)

	sentence := "测试中文a"
	for _, i := range sentence {
		fmt.Printf("%c %T\n", i, i)
	}
}

func AppendString() {
	sb := bytes.Buffer{}

	sb.WriteString("前半句")
	sb.WriteString("后半句")

	fmt.Println(sb.String())
}


func SubString() {
	sentence := "前半句,后半句"
	sentence += "追加"
	sentence = strings.Replace(sentence, "半句", "一句", -1)
	comma := strings.Index(sentence, ",")

	fmt.Printf("first part is %s \nsecond part is %s\n", sentence[:comma], sentence[comma+1:])
}

func PlayString() {


	fmt.Println("location is \"C:\\sdf\n.ext")

	fmt.Println(`// Generated by github.com/davyxu/cellnet/
protoc-gen-msg
// DO NOT EDIT!{{range .Protos}}
// Source: {{.Name}}{{end}}
package {{.PackageName}}
{{if gt .TotalMessages 0}}
import (
    "github.com/davyxu/cellnet"
    "reflect"
    _ "github.com/davyxu/cellnet/codec/pb"
)

{{end}}
func init() {
    {{range .Protos}}
    // {{.Name}}{{range .Messages}}
    cellnet.RegisterMessageMeta("pb","{{.FullName}}", reflect.TypeOf((*{{.Name}})(nil)).Elem(), {{.MsgID}})    {{end}}
    {{end}}
}`)
}

func PlayVar(a int, b int) (int, int) {
	a, b = b, a
	fmt.Println(a, b)
	return a, b
}

